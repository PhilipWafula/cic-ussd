// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */

import { initFormatters } from './formatters'
import type { Locales, Translations } from './i18n-types'
import { loadedFormatters, loadedLocales, locales } from './i18n-util'

import eng from './eng'
import swa from './swa'

import eng_auth from './eng/auth'
import eng_balances from './eng/balances'
import eng_helpers from './eng/helpers'
import eng_languages from './eng/languages'
import eng_main from './eng/main'
import eng_pins from './eng/pins'
import eng_profile from './eng/profile'
import eng_registration from './eng/registration'
import eng_settings from './eng/settings'
import eng_sms from './eng/sms'
import eng_socialRecovery from './eng/socialRecovery'
import eng_statement from './eng/statement'
import eng_transfer from './eng/transfer'
import eng_voucher from './eng/voucher'
import swa_auth from './swa/auth'
import swa_balances from './swa/balances'
import swa_helpers from './swa/helpers'
import swa_languages from './swa/languages'
import swa_main from './swa/main'
import swa_pins from './swa/pins'
import swa_profile from './swa/profile'
import swa_registration from './swa/registration'
import swa_settings from './swa/settings'
import swa_sms from './swa/sms'
import swa_socialRecovery from './swa/socialRecovery'
import swa_statement from './swa/statement'
import swa_transfer from './swa/transfer'
import swa_voucher from './swa/voucher'

const localeTranslations = {
	eng: {
		...eng,
		auth: eng_auth,
		balances: eng_balances,
		helpers: eng_helpers,
		languages: eng_languages,
		main: eng_main,
		pins: eng_pins,
		profile: eng_profile,
		registration: eng_registration,
		settings: eng_settings,
		sms: eng_sms,
		socialRecovery: eng_socialRecovery,
		statement: eng_statement,
		transfer: eng_transfer,
		voucher: eng_voucher
	},
	swa: {
		...swa,
		auth: swa_auth,
		balances: swa_balances,
		helpers: swa_helpers,
		languages: swa_languages,
		main: swa_main,
		pins: swa_pins,
		profile: swa_profile,
		registration: swa_registration,
		settings: swa_settings,
		sms: swa_sms,
		socialRecovery: swa_socialRecovery,
		statement: swa_statement,
		transfer: swa_transfer,
		voucher: swa_voucher
	},
}

export const loadLocale = (locale: Locales): void => {
	if (loadedLocales[locale]) return

	loadedLocales[locale] = localeTranslations[locale] as unknown as Translations
	loadFormatters(locale)
}

export const loadAllLocales = (): void => locales.forEach(loadLocale)

export const loadFormatters = (locale: Locales): void =>
	void (loadedFormatters[locale] = initFormatters(locale))
